{
	"info": {
		"_postman_id": "a4c61c97-6391-4b49-add1-a5df5b86eb39",
		"name": "TestRail API",
		"description": "Integrate automated tests, submit test results and automate various aspects of TestRail",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4792651",
		"_collection_link": "https://www.postman.com/blue-moon-746607/testrail/collection/y3uvj9y/testrail-api?action=share&source=collection_link&creator=4792651"
	},
	"item": [
		{
			"name": "Test Case Management",
			"item": [
				{
					"name": "Cases",
					"item": [
						{
							"name": "Case Status",
							"item": [
								{
									"name": "FIND Case Statuses",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/get_case_statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case_statuses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "FIND Templates for Test Cases per Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}get_templates/:project_id",
									"host": [
										"{{baseUrl}}get_templates"
									],
									"path": [
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_case",
										":case_id"
									],
									"variable": [
										{
											"key": "case_id",
											"value": "",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"response": [
								{
									"name": "A test case",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "https://your_domain.testrail.com/index.php?/api/v2/get_case/:case_id",
											"protocol": "https",
											"host": [
												"your_domain",
												"testrail",
												"com"
											],
											"path": [
												"index.php"
											],
											"query": [
												{
													"key": "/api/v2/get_case/:case_id",
													"value": null
												}
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "FIND Test Cases in Suite (or specific section of suite)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_cases/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_cases",
										":project_id"
									],
									"query": [
										{
											"key": "suite_id",
											"value": "",
											"description": "The ID of the test suite (optional if the project is operating in single suite mode)",
											"disabled": true
										},
										{
											"key": "created_after",
											"value": "",
											"description": "Only return test cases created after this date (as UNIX timestamp).",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": "",
											"description": "Only return test cases created before this date (as UNIX timestamp).",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": "",
											"description": "A comma-separated list of creators (user IDs) to filter by.",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": "",
											"description": "A comma-separated list of milestone IDs to filter by (not available if the milestone field is disabled for the project).",
											"disabled": true
										},
										{
											"key": "priority_id",
											"value": "",
											"description": "A comma-separated list of priority IDs to filter by.",
											"disabled": true
										},
										{
											"key": "template_id",
											"value": "",
											"description": "A comma-separated list of template IDs to filter by (requires TestRail 5.2 or later)",
											"disabled": true
										},
										{
											"key": "type_id",
											"value": "",
											"description": "A comma-separated list of case type IDs to filter by.",
											"disabled": true
										},
										{
											"key": "updated_after",
											"value": "",
											"description": "Only return test cases updated after this date (as UNIX timestamp).",
											"disabled": true
										},
										{
											"key": "updated_before",
											"value": "",
											"description": "Only return test cases updated before this date (as UNIX timestamp).",
											"disabled": true
										},
										{
											"key": "updated_by",
											"value": "",
											"description": "A comma-separated list of user IDs who updated test cases, to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test cases",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "https://your_domain.testrail.com/index.php?/api/v2/get_cases/:project_id?suite_id=-16741323&created_after=-16741323&created_before=-16741323&created_by=dolor officia anim&milestone_id=dolor officia anim&priority_id=dolor officia anim&template_id=dolor officia anim&type_id=dolor officia anim&updated_after=-16741323&updated_before=-16741323&updated_by=dolor officia anim",
											"protocol": "https",
											"host": [
												"your_domain",
												"testrail",
												"com"
											],
											"path": [
												"index.php"
											],
											"query": [
												{
													"key": "suite_id",
													"value": "-16741323"
												},
												{
													"key": "created_after",
													"value": "-16741323"
												},
												{
													"key": "created_before",
													"value": "-16741323"
												},
												{
													"key": "created_by",
													"value": "dolor officia anim"
												},
												{
													"key": "milestone_id",
													"value": "dolor officia anim"
												},
												{
													"key": "priority_id",
													"value": "dolor officia anim"
												},
												{
													"key": "template_id",
													"value": "dolor officia anim"
												},
												{
													"key": "type_id",
													"value": "dolor officia anim"
												},
												{
													"key": "updated_after",
													"value": "-16741323"
												},
												{
													"key": "updated_before",
													"value": "-16741323"
												},
												{
													"key": "updated_by",
													"value": "dolor officia anim"
												}
											],
											"variable": [
												{
													"key": "project_id",
													"value": "-16741323",
													"description": "(Required) The ID of the project"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"created_by\": -9749215,\n    \"created_on\": 80652579,\n    \"estimate\": \"in ut sunt non\",\n    \"estimate_forecast\": \"eiusmod\",\n    \"id\": 48517900,\n    \"milestone_id\": -77707724,\n    \"refs\": \"Exc\",\n    \"section_id\": 61010616,\n    \"suite_id\": -55905306,\n    \"template_id\": -75410619,\n    \"title\": \"nostrud\",\n    \"type_id\": 40964598,\n    \"updated_by\": -82102066,\n    \"updated_on\": -79696019\n  },\n  {\n    \"created_by\": -52092246,\n    \"created_on\": -34435910,\n    \"estimate\": \"cillum\",\n    \"estimate_forecast\": \"Lorem minim culpa\",\n    \"id\": -75038747,\n    \"milestone_id\": 17603330,\n    \"refs\": \"commodo d\",\n    \"section_id\": -10739293,\n    \"suite_id\": -12909054,\n    \"template_id\": -18249181,\n    \"title\": \"id\",\n    \"type_id\": 24140116,\n    \"updated_by\": 31928404,\n    \"updated_on\": -30719508\n  }\n]"
								},
								{
									"name": "Invalid or unknown project, suite or section",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_cases/:project_id?suite_id=-16741323&created_after=-16741323&created_before=-16741323&created_by=dolor officia anim&milestone_id=dolor officia anim&priority_id=dolor officia anim&template_id=dolor officia anim&type_id=dolor officia anim&updated_after=-16741323&updated_before=-16741323&updated_by=dolor officia anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_cases",
												":project_id"
											],
											"query": [
												{
													"key": "suite_id",
													"value": "-16741323"
												},
												{
													"key": "created_after",
													"value": "-16741323"
												},
												{
													"key": "created_before",
													"value": "-16741323"
												},
												{
													"key": "created_by",
													"value": "dolor officia anim"
												},
												{
													"key": "milestone_id",
													"value": "dolor officia anim"
												},
												{
													"key": "priority_id",
													"value": "dolor officia anim"
												},
												{
													"key": "template_id",
													"value": "dolor officia anim"
												},
												{
													"key": "type_id",
													"value": "dolor officia anim"
												},
												{
													"key": "updated_after",
													"value": "-16741323"
												},
												{
													"key": "updated_before",
													"value": "-16741323"
												},
												{
													"key": "updated_by",
													"value": "dolor officia anim"
												}
											],
											"variable": [
												{
													"key": "project_id",
													"value": "-16741323",
													"description": "(Required) The ID of the project"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_cases/:project_id?suite_id=-16741323&created_after=-16741323&created_before=-16741323&created_by=dolor officia anim&milestone_id=dolor officia anim&priority_id=dolor officia anim&template_id=dolor officia anim&type_id=dolor officia anim&updated_after=-16741323&updated_before=-16741323&updated_by=dolor officia anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_cases",
												":project_id"
											],
											"query": [
												{
													"key": "suite_id",
													"value": "-16741323"
												},
												{
													"key": "created_after",
													"value": "-16741323"
												},
												{
													"key": "created_before",
													"value": "-16741323"
												},
												{
													"key": "created_by",
													"value": "dolor officia anim"
												},
												{
													"key": "milestone_id",
													"value": "dolor officia anim"
												},
												{
													"key": "priority_id",
													"value": "dolor officia anim"
												},
												{
													"key": "template_id",
													"value": "dolor officia anim"
												},
												{
													"key": "type_id",
													"value": "dolor officia anim"
												},
												{
													"key": "updated_after",
													"value": "-16741323"
												},
												{
													"key": "updated_before",
													"value": "-16741323"
												},
												{
													"key": "updated_by",
													"value": "dolor officia anim"
												}
											],
											"variable": [
												{
													"key": "project_id",
													"value": "-16741323",
													"description": "(Required) The ID of the project"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_cases/:project_id?suite_id=-16741323&created_after=-16741323&created_before=-16741323&created_by=dolor officia anim&milestone_id=dolor officia anim&priority_id=dolor officia anim&template_id=dolor officia anim&type_id=dolor officia anim&updated_after=-16741323&updated_before=-16741323&updated_by=dolor officia anim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_cases",
												":project_id"
											],
											"query": [
												{
													"key": "suite_id",
													"value": "-16741323"
												},
												{
													"key": "created_after",
													"value": "-16741323"
												},
												{
													"key": "created_before",
													"value": "-16741323"
												},
												{
													"key": "created_by",
													"value": "dolor officia anim"
												},
												{
													"key": "milestone_id",
													"value": "dolor officia anim"
												},
												{
													"key": "priority_id",
													"value": "dolor officia anim"
												},
												{
													"key": "template_id",
													"value": "dolor officia anim"
												},
												{
													"key": "type_id",
													"value": "dolor officia anim"
												},
												{
													"key": "updated_after",
													"value": "-16741323"
												},
												{
													"key": "updated_before",
													"value": "-16741323"
												},
												{
													"key": "updated_by",
													"value": "dolor officia anim"
												}
											],
											"variable": [
												{
													"key": "project_id",
													"value": "-16741323",
													"description": "(Required) The ID of the project"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "RETURN Case History",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_history_for_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_history_for_case",
										":case_id"
									],
									"variable": [
										{
											"key": "case_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MAKE New  Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_case/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_case",
										":section_id"
									],
									"variable": [
										{
											"key": "section_id",
											"value": "",
											"description": "(Required) The ID of the section the test case should be added to"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success, the test case was created and is returned as part of the response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "https://your_domain.testrail.com/index.php?/api/v2/add_case/:section_id",
											"protocol": "https",
											"host": [
												"your_domain",
												"testrail",
												"com"
											],
											"path": [
												"index.php"
											],
											"query": [
												{
													"key": "/api/v2/add_case/:section_id",
													"value": null
												}
											],
											"variable": [
												{
													"key": "section_id",
													"value": "-16741323",
													"description": "(Required) The ID of the section the test case should be added to"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/add_case/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"add_case",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "-16741323",
													"description": "(Required) The ID of the section the test case should be added to"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/add_case/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"add_case",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "-16741323",
													"description": "(Required) The ID of the section the test case should be added to"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/add_case/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"add_case",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "-16741323",
													"description": "(Required) The ID of the section the test case should be added to"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "UPSERT Existing Test Case (partial updates are supported, i.e. you can submit and update specific fields only).",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_case",
										":case_id"
									],
									"variable": [
										{
											"key": "case_id",
											"value": "",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success, the test case was updated and is returned as part of the response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "https://your_domain.testrail.com/index.php?/api/v2/update_case/:case_id",
											"protocol": "https",
											"host": [
												"your_domain",
												"testrail",
												"com"
											],
											"path": [
												"index.php"
											],
											"query": [
												{
													"key": "/api/v2/update_case/:case_id",
													"value": null
												}
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "UPSERT MANY Existing Test Cases by Suite (partial updates are supported)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_cases/:suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_cases",
										":suite_id"
									],
									"query": [
										{
											"key": "section_id",
											"value": "",
											"description": "The ID of the section the test case should be updated to",
											"disabled": true
										},
										{
											"key": "title",
											"value": "",
											"description": "The title of the test case",
											"disabled": true
										},
										{
											"key": "template_id",
											"value": "",
											"description": "The ID of the template (field layout)—requires TestRail 5.2 or later",
											"disabled": true
										},
										{
											"key": "type_id",
											"value": "",
											"description": "The ID of the case type",
											"disabled": true
										},
										{
											"key": "priority_id",
											"value": "",
											"description": "The ID of the case priority",
											"disabled": true
										},
										{
											"key": "estimate",
											"value": "",
											"description": "The estimate, e.g. “30s” or “1m 45s”",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": "",
											"description": "The ID of the milestone to link to the test case",
											"disabled": true
										},
										{
											"key": "refs",
											"value": "",
											"description": "A comma-separated list of references/requirements",
											"disabled": true
										},
										{
											"key": "case_ids",
											"value": null,
											"description": "The ID of the cases that need to be updated",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "suite_id",
											"value": null,
											"description": "The ID of the test suite (optional if the project is operating in single suite mode)"
										}
									]
								},
								"description": "StartFragment\n\nUpdates multiple test cases with the same values, like setting a set of test cases to “High” priority. This does not support updating multiple test cases with different values per test case.\n\nEndFragment"
							},
							"response": [
								{
									"name": "Success, the test case was updated and is returned as part of the response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "https://your_domain.testrail.com/index.php?/api/v2/update_case/:case_id",
											"protocol": "https",
											"host": [
												"your_domain",
												"testrail",
												"com"
											],
											"path": [
												"index.php"
											],
											"query": [
												{
													"key": "/api/v2/update_case/:case_id",
													"value": null
												}
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "UPSERT MANY Existing Test Cases by Case ID(partial updates are supported) Copy",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_cases?case_ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_cases"
									],
									"query": [
										{
											"key": "section_id",
											"value": "",
											"description": "The ID of the section the test case should be updated to",
											"disabled": true
										},
										{
											"key": "title",
											"value": "",
											"description": "The title of the test case",
											"disabled": true
										},
										{
											"key": "template_id",
											"value": "",
											"description": "The ID of the template (field layout)—requires TestRail 5.2 or later",
											"disabled": true
										},
										{
											"key": "type_id",
											"value": "",
											"description": "The ID of the case type",
											"disabled": true
										},
										{
											"key": "priority_id",
											"value": "",
											"description": "The ID of the case priority",
											"disabled": true
										},
										{
											"key": "estimate",
											"value": "",
											"description": "The estimate, e.g. “30s” or “1m 45s”",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": "",
											"description": "The ID of the milestone to link to the test case",
											"disabled": true
										},
										{
											"key": "refs",
											"value": "",
											"description": "A comma-separated list of references/requirements",
											"disabled": true
										},
										{
											"key": "case_ids",
											"value": null
										},
										{
											"key": "suite_id",
											"value": null,
											"disabled": true
										}
									]
								},
								"description": "StartFragment\n\nUpdates multiple test cases with the same values, like setting a set of test cases to “High” priority. This does not support updating multiple test cases with different values per test case.\n\nEndFragment"
							},
							"response": [
								{
									"name": "Success, the test case was updated and is returned as part of the response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/update_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"update_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "ADD Copies of Test Cases to Sections",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/copy_cases_to_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"copy_cases_to_section",
										":section_id"
									],
									"query": [
										{
											"key": "case_ids",
											"value": null,
											"description": "A comma-separated list of case IDs",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "section_id",
											"value": null,
											"description": "The ID of the section the test case should be copied to"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MOVE Test Cases by Section",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/move_cases_to_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"move_cases_to_section",
										":section_id"
									],
									"query": [
										{
											"key": "case_ids",
											"value": null,
											"description": "A comma-separated list of case IDs",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "section_id",
											"value": null,
											"description": "The ID of the section the case will be moved to"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MOVE Test Cases by Suite",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/move_cases_to_section/:suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"move_cases_to_section",
										":suite_id"
									],
									"query": [
										{
											"key": "case_ids",
											"value": null,
											"description": "A comma-separated list of case IDs",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "suite_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_case",
										":case_id"
									],
									"variable": [
										{
											"key": "case_id",
											"value": "-16741323",
											"description": "(Required) The ID of the test case"
										}
									]
								},
								"description": "Please note: Deleting a test case cannot be undone and also permanently deletes all test results in active test runs (i.e. test runs that haven't been closed (archived) yet).\n"
							},
							"response": [
								{
									"name": "Success, the test case was deleted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						},
						{
							"name": "DELETE MANY Test Cases by Suite",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_cases/:suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_cases",
										":suite_id"
									],
									"query": [
										{
											"key": "case_ids",
											"value": "",
											"description": "An array of the IDs of the test cases you would like to delete",
											"disabled": true
										},
										{
											"key": "project_id",
											"value": "",
											"description": "The ID of the project",
											"disabled": true
										},
										{
											"key": "soft",
											"value": null,
											"description": "soft=1 will return information about the data which will be deleted but will not proceed with the deletion",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "suite_id",
											"value": null,
											"description": "The ID of the suite (Only required if project is in multi-suite mode)"
										}
									]
								},
								"description": "Please note: Deleting a test case cannot be undone and also permanently deletes all test results in active test runs (i.e. test runs that haven't been closed (archived) yet).\n"
							},
							"response": [
								{
									"name": "Success, the test case was deleted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid or unknown test case",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "No access to the project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/delete_case/:case_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"delete_case",
												":case_id"
											],
											"variable": [
												{
													"key": "case_id",
													"value": "-16741323",
													"description": "(Required) The ID of the test case"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Fields",
					"item": [
						{
							"name": "RETURN Custom Fields for Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_case_fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_case_fields"
									]
								}
							},
							"response": [
								{
									"name": "Success, the available custom fields are returned as part of the response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case_fields"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"configs\": [\n      {\n        \"context\": {\n          \"is_global\": false,\n          \"project_ids\": \"in quis irure tempor\"\n        },\n        \"id\": -41338136,\n        \"options\": {\n          \"default_value\": \"ut Duis\",\n          \"format\": \"deserunt eu eiusmod id\",\n          \"is_required\": \"tempor magna et velit paria\",\n          \"rows\": -14351951\n        }\n      },\n      {\n        \"context\": {\n          \"is_global\": false,\n          \"project_ids\": \"voluptate occaecat\"\n        },\n        \"id\": 89621907,\n        \"options\": {\n          \"default_value\": \"ipsum voluptate labore\",\n          \"format\": \"consecte\",\n          \"is_required\": \"exercitation fugiat aute elit\",\n          \"rows\": 85886553\n        }\n      }\n    ],\n    \"description\": \"Lorem minim deserunt\",\n    \"display_order\": -23883240,\n    \"id\": 73346974,\n    \"label\": \"esse magna consequat ut\",\n    \"name\": \"nostrud velit\",\n    \"system_name\": \"in\",\n    \"type_id\": 77110598\n  },\n  {\n    \"configs\": [\n      {\n        \"context\": {\n          \"is_global\": true,\n          \"project_ids\": \"mollit irure\"\n        },\n        \"id\": -87169864,\n        \"options\": {\n          \"default_value\": \"veniam eu\",\n          \"format\": \"id voluptate Ut\",\n          \"is_required\": \"incididunt\",\n          \"rows\": -83325301\n        }\n      },\n      {\n        \"context\": {\n          \"is_global\": false,\n          \"project_ids\": \"adipisicing cillum ad\"\n        },\n        \"id\": 10385081,\n        \"options\": {\n          \"default_value\": \"anim ipsum\",\n          \"format\": \"quis commodo\",\n          \"is_required\": \"nisi adipisicing officia eu\",\n          \"rows\": -28442624\n        }\n      }\n    ],\n    \"description\": \"dolor ad culpa no\",\n    \"display_order\": 2963632,\n    \"id\": 94725112,\n    \"label\": \"ex dolore officia adipisicing dolo\",\n    \"name\": \"cillum\",\n    \"system_name\": \"Lorem elit\",\n    \"type_id\": 10656083\n  }\n]"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case_fields"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Types",
					"item": [
						{
							"name": "RETURN Types Options for Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_case_types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_case_types"
									]
								}
							},
							"response": [
								{
									"name": "Success, the case types are returned as part of the response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case_types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case_types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 70213955,\n    \"is_default\": false,\n    \"name\": \"quis fugiat consequat magna\"\n  },\n  {\n    \"id\": -46680182,\n    \"is_default\": true,\n    \"name\": \"ut\"\n  }\n]"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_case_types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_case_types"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Priority",
					"item": [
						{
							"name": "RETURN Priority Options for Test Case",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_priorities"
									]
								}
							},
							"response": [
								{
									"name": "Success, the priorities are returned as part of the response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_priorities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_priorities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 74082137,\n    \"is_default\": false,\n    \"priority\": 46947113,\n    \"name\": \"culpa et\",\n    \"shortname\": \"sunt dolor Ut\"\n  },\n  {\n    \"id\": -35972549,\n    \"is_default\": true,\n    \"priority\": -8448179,\n    \"name\": \"ea eiusmod Duis cillum\",\n    \"shortname\": \"esse incididunt\"\n  }\n]"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/get_priorities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"get_priorities"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Shared Steps",
					"item": [
						{
							"name": "ADD Shared Step",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_shared_step/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_shared_step",
										":project_id"
									],
									"query": [
										{
											"key": "custom_steps_separated",
											"value": null,
											"description": "An array of objects. Each object contains the details for an individual step. See the table below for more details",
											"disabled": true
										},
										{
											"key": "title",
											"value": null,
											"description": "The title for the set of steps",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "updated_after",
											"value": null,
											"description": "Only return shared steps updated after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "updated_before",
											"value": null,
											"description": "Only return shared steps updated before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "refs",
											"value": null,
											"description": "A single Reference ID (e.g. TR-a, 4291, etc.)",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Shared Step",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/update_shared_step/:shared_update_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_shared_step",
										":shared_update_id"
									],
									"query": [
										{
											"key": "custom_steps_separated",
											"value": null,
											"description": "An array of objects. Each object contains the details for an individual step. See the table below for more details",
											"disabled": true
										},
										{
											"key": "title",
											"value": null,
											"description": "The title for the set of steps",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "updated_after",
											"value": null,
											"description": "Only return shared steps updated after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "updated_before",
											"value": null,
											"description": "Only return shared steps updated before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "refs",
											"value": null,
											"description": "A single Reference ID (e.g. TR-a, 4291, etc.)",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "shared_update_id",
											"value": null,
											"description": "The ID of the set of shared steps"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Shared Step",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete_shared_step/:shared_update_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_shared_step",
										":shared_update_id"
									],
									"query": [
										{
											"key": "keep_in_cases",
											"value": null,
											"description": "Default is 1 (true). Submit keep_in_cases=0 to delete the shared steps from all test cases as well as the shared step repository",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "shared_update_id",
											"value": null,
											"description": "The ID of the set of shared steps"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Shared Step",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_shared_step/:shared_step_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_shared_step",
										":shared_step_id"
									],
									"variable": [
										{
											"key": "shared_step_id",
											"value": null,
											"description": "The ID of the set of shared steps"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Shared Step(s) for a Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_shared_steps/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_shared_steps",
										":project_id"
									],
									"query": [
										{
											"key": "created_after",
											"value": null,
											"description": "Only return shared steps created after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": null,
											"description": "Only return shared steps created before this date (as UNIX timestamp",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Limit the result to :limit test runs. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "updated_after",
											"value": null,
											"description": "Only return shared steps updated after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "updated_before",
											"value": null,
											"description": "Only return shared steps updated before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "refs",
											"value": null,
											"description": "A single Reference ID (e.g. TR-a, 4291, etc.)",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null,
											"description": "The ID of the project"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Shared Step History",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_shared_step_history/:shared_step_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_shared_step_history",
										":shared_step_id"
									],
									"variable": [
										{
											"key": "shared_step_id",
											"value": null,
											"description": "The ID of the set of shared steps"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Suite and Section Management",
			"item": [
				{
					"name": "Sections",
					"item": [
						{
							"name": "RETURN Suite Sections per Project",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{ApiKey}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "rachael.thompson@epicgames.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_sections/:project_id?suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_sections",
										":project_id"
									],
									"query": [
										{
											"key": "suite_id",
											"value": null
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RETURN Section by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{ApiKey}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "rachael.thompson@epicgames.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_section",
										":section_id"
									],
									"variable": [
										{
											"key": "section_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "MOVE Section by ID",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/move_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"move_section",
										":section_id"
									],
									"query": [
										{
											"key": "parent_id",
											"value": "",
											"description": "The ID of the parent section (to build section hierarchies)",
											"disabled": true
										},
										{
											"key": "after_id",
											"value": "",
											"description": "The section ID after which the section should be put (can be null)",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "section_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Section to Project",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_section/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_section",
										":project_id"
									],
									"query": [
										{
											"key": "description",
											"value": null,
											"description": "The description of the section",
											"disabled": true
										},
										{
											"key": "suite_id",
											"value": null,
											"description": "The ID of the test suite (ignored if the project is operating in single suite mode, required otherwise)",
											"disabled": true
										},
										{
											"key": "parent_id",
											"value": null,
											"description": "The ID of the parent section (to build section hierarchies)",
											"disabled": true
										},
										{
											"key": "name",
											"value": null,
											"description": "The name of the section",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Section by ID Copy",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/update_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_section",
										":section_id"
									],
									"query": [
										{
											"key": "description",
											"value": "",
											"description": "The description of the section",
											"disabled": true
										},
										{
											"key": "name",
											"value": "",
											"description": "The name of the section\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "section_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Section by ID",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete_section/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_section",
										":section_id"
									],
									"query": [
										{
											"key": "soft",
											"value": "",
											"description": "Including soft=1 will not actually delete the entity in TestRail UI and the output will only show in the API response",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "section_id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Suites",
					"item": [
						{
							"name": "RETURN Suite",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_suite/:suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_suite",
										":suite_id"
									],
									"variable": [
										{
											"key": "suite_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "RETURN Suites",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_suite/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_suite",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Suite by Project ID",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_suite/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_suite",
										":project_id"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "The name of the test suite",
											"disabled": true
										},
										{
											"key": "description",
											"value": null,
											"description": "The description of the test suite",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Suite by Project ID Copy",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/update_suite/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_suite",
										":project_id"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "The name of the test suite",
											"disabled": true
										},
										{
											"key": "description",
											"value": null,
											"description": "The description of the test suite",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Suite",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete_suite/:suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_suite",
										":suite_id"
									],
									"variable": [
										{
											"key": "suite_id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Data and Attachments Management",
			"item": [
				{
					"name": "Attachments",
					"item": [
						{
							"name": "ADD Attachment to Case",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "{{filepath}}",
											"description": "The attachment should be submitted as form data in the body of the request.\nUse the file path like example: \nhttps://www.gurock.com/testrail/docs/api/getting-started/accessing",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/add_attachment_to_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_attachment_to_case",
										":case_id"
									],
									"variable": [
										{
											"key": "case_id",
											"value": null
										}
									]
								},
								"description": "Adds an attachment to a test plan. The maximum allowable upload size is set to 256MB"
							},
							"response": []
						},
						{
							"name": "ADD Attachment to Result",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "{{filepath}}",
											"description": "The attachment should be submitted as form data in the body of the request.\nUse the file path like example: \nhttps://www.gurock.com/testrail/docs/api/getting-started/accessing",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/add_attachment_to_result/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_attachment_to_result",
										":result_id"
									],
									"variable": [
										{
											"key": "result_id",
											"value": null
										}
									]
								},
								"description": "Adds an attachment to a test plan. The maximum allowable upload size is set to 256MB"
							},
							"response": []
						},
						{
							"name": "ADD Attachment to Run",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "{{filepath}}",
											"description": "The attachment should be submitted as form data in the body of the request.\nUse the file path like example: \nhttps://www.gurock.com/testrail/docs/api/getting-started/accessing",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/add_attachment_to_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_attachment_to_run",
										":run_id"
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								},
								"description": "Adds an attachment to a test plan. The maximum allowable upload size is set to 256MB"
							},
							"response": []
						},
						{
							"name": "ADD Attachment to Plan",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "{{filepath}}",
											"description": "The attachment should be submitted as form data in the body of the request.\nUse the file path like example: \nhttps://www.gurock.com/testrail/docs/api/getting-started/accessing",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/add_attachment_to_plan/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_attachment_to_plan",
										":plan_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null
										}
									]
								},
								"description": "Adds an attachment to a test plan. The maximum allowable upload size is set to 256MB"
							},
							"response": []
						},
						{
							"name": "ADD Attachment to Plan Entry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "{{filepath}}",
											"description": "The attachment should be submitted as form data in the body of the request.\nUse the file path like example: \nhttps://www.gurock.com/testrail/docs/api/getting-started/accessing",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/add_attachment_to_plan_entry/:plan_id/:entry_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_attachment_to_plan_entry",
										":plan_id",
										":entry_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the test plan containing the entry"
										},
										{
											"key": "entry_id",
											"value": null,
											"description": "The ID of the test plan entry the attachment should be added to"
										}
									]
								},
								"description": "Adds an attachment to a test plan. The maximum allowable upload size is set to 256MB"
							},
							"response": []
						},
						{
							"name": "FIND Attachment by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachment/:attachment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachment",
										":attachment_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "attachment_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Attachments for Case",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachments_for_case/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachments_for_case",
										":case_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "case_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Attachments for Plan",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachments_for_plan/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachments_for_plan",
										":plan_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Attachments for Plan Entry",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachments_for_plan_entry/:plan_id/:entry_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachments_for_plan_entry",
										":plan_id",
										":entry_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null
										},
										{
											"key": "entry_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Attachments for a Run",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachments_for_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachments_for_run",
										":run_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Attachments for a Test",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_attachments_for_test/:test_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_attachments_for_test",
										":test_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number of attachments the response should return ",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Where to start counting the attachments from (the offset) for beginning chhose [0] or the start of the array.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "test_id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Datasets - Hold for when added to TR",
					"item": []
				}
			]
		},
		{
			"name": "Test Planning Management",
			"item": [
				{
					"name": "Plans",
					"item": [
						{
							"name": "FIND Plan",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_plan/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_plan",
										":plan_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the test plan"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Plan(s)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_plans/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_plans",
										":project_id"
									],
									"query": [
										{
											"key": "created_after",
											"value": null,
											"description": "Only return test plans created after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": null,
											"description": "Only return test plans created before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										},
										{
											"key": "is_completed",
											"value": null,
											"description": "1 to return completed test plans only. 0 to return active test plans only",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "Limit the result to :limit test plans. Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Use :offset to skip records",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": null,
											"description": "A comma-separated list of milestone IDs to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Plan",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"example\",\r\n    \"description\": \"test blah\",\r\n    \"milestone_id\": 123,\r\n    \"entries\": [\r\n        {\r\n            \"suite_id\": 1,\r\n            \"name\": \"test_1\",\r\n            \"assigned_to\": 1 //id of assignee\r\n        },\r\n        {\r\n            \"suite_id\": 1,\r\n            \"include_all\": false, // Custom selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3,\r\n                5\r\n            ]\r\n        },\r\n        {\r\n            \"suite_id\": 1,\r\n            \"include_all\": true,\r\n            \"config_ids\": [\r\n                1,\r\n                2,\r\n                4,\r\n                5,\r\n                6\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"include_all\": false,\r\n                    \"case_ids\": [\r\n                        1,\r\n                        2,\r\n                        3\r\n                    ],\r\n                    \"assignedto_id\": 1,\r\n                    \"config_ids\": [\r\n                        2,\r\n                        5\r\n                    ]\r\n                },\r\n                {\r\n                    \"include_all\": false,\r\n                    \"case_ids\": [\r\n                        1,\r\n                        2,\r\n                        3,\r\n                        5,\r\n                        8\r\n                    ],\r\n                    \"assignedto_id\": 2,\r\n                    \"config_ids\": [\r\n                        2,\r\n                        6\r\n                    ]\r\n                }\r\n                // ..\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_plan/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_plan",
										":project_id"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Plan",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    //With the exception of the entries field, this method supports the same POST fields as add_plan.\r\n    \"name\": \"example\",\r\n    \"description\": \"test blah\",\r\n    \"milestone_id\": 123,\r\n    \"entries\": [\r\n        {\r\n            \"suite_id\": 1,\r\n            \"name\": \"test_1\",\r\n            \"assigned_to\": 1 //id of assignee\r\n        },\r\n        {\r\n            \"suite_id\": 1,\r\n            \"include_all\": false, // Custom selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3,\r\n                5\r\n            ]\r\n        },\r\n        {\r\n            \"suite_id\": 1,\r\n            \"include_all\": true,\r\n            \"config_ids\": [\r\n                1,\r\n                2,\r\n                4,\r\n                5,\r\n                6\r\n            ],\r\n            \"runs\": [\r\n                {\r\n                    \"include_all\": false,\r\n                    \"case_ids\": [\r\n                        1,\r\n                        2,\r\n                        3\r\n                    ],\r\n                    \"assignedto_id\": 1,\r\n                    \"config_ids\": [\r\n                        2,\r\n                        5\r\n                    ]\r\n                },\r\n                {\r\n                    \"include_all\": false,\r\n                    \"case_ids\": [\r\n                        1,\r\n                        2,\r\n                        3,\r\n                        5,\r\n                        8\r\n                    ],\r\n                    \"assignedto_id\": 2,\r\n                    \"config_ids\": [\r\n                        2,\r\n                        6\r\n                    ]\r\n                }\r\n                // ..\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_plan/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_plan",
										":plan_id"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the test plan"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Plan Entry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   //https://support.gurock.com/hc/en-us/articles/7077711537684-Plans#addplanentry\r\n    \"suite_id\": 1,\r\n    \"assignedto_id\": 1, // Default assignee\r\n    \"include_all\": true, // Default selection\r\n    \"config_ids\": [\r\n        1,\r\n        2,\r\n        4,\r\n        5,\r\n        6\r\n    ],\r\n    \"runs\": [\r\n        {\r\n            \"include_all\": false, // Override selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3\r\n            ],\r\n            \"config_ids\": [\r\n                2,\r\n                5\r\n            ]\r\n        },\r\n        {\r\n            \"include_all\": false, // Override selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3,\r\n                5,\r\n                8\r\n            ],\r\n            \"assignedto_id\": 2, // Override assignee\r\n            \"config_ids\": [\r\n                2,\r\n                6\r\n            ]\r\n        },\r\n        // ..\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_plan_entry/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_plan_entry",
										":plan_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the plan the test runs should be added to"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Plan Entry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   //https://support.gurock.com/hc/en-us/articles/7077711537684-Plans#addplanentry\r\n    \"suite_id\": 1,\r\n    \"assignedto_id\": 1, // Default assignee\r\n    \"include_all\": true, // Default selection\r\n    \"config_ids\": [\r\n        1,\r\n        2,\r\n        4,\r\n        5,\r\n        6\r\n    ],\r\n    \"runs\": [\r\n        {\r\n            \"include_all\": false, // Override selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3\r\n            ],\r\n            \"config_ids\": [\r\n                2,\r\n                5\r\n            ]\r\n        },\r\n        {\r\n            \"include_all\": false, // Override selection\r\n            \"case_ids\": [\r\n                1,\r\n                2,\r\n                3,\r\n                5,\r\n                8\r\n            ],\r\n            \"assignedto_id\": 2, // Override assignee\r\n            \"config_ids\": [\r\n                2,\r\n                6\r\n            ]\r\n        },\r\n        // ..\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_plan_entry/:plan_id/:entry_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_plan_entry",
										":plan_id",
										":entry_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the plan the test runs should be added to"
										},
										{
											"key": "entry_id",
											"value": null,
											"description": "The ID of the test plan entry (note: not the test run ID)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD  Run to Plan Entry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "//https://support.gurock.com/hc/en-us/articles/7077711537684-Plans#addruntoplanentry\r\n{\r\n    \"config_ids\": [\r\n        1,\r\n        5\r\n    ],\r\n    \"description\": \"example\",\r\n    \"assignedto_id\": 1, //id of assignee\r\n    \"include_all\": false,\r\n    \"case_ids\": [\r\n        1,\r\n        2,\r\n        4\r\n    ],\r\n    \"refs\": \"FNTEST-123, FNTEST-1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_run_to_plan_entry/:plan_id/:entry_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_run_to_plan_entry",
										":plan_id",
										":entry_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the plan the test runs should be added to"
										},
										{
											"key": "entry_id",
											"value": null,
											"description": "The ID of the test plan entry"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Run to Plan Entry",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "//https://support.gurock.com/hc/en-us/articles/7077711537684-Plans#addruntoplanentry\r\n{\r\n    \"config_ids\": [\r\n        1,\r\n        5\r\n    ],\r\n    \"description\": \"example\",\r\n    \"assignedto_id\": 1, //id of assignee\r\n    \"include_all\": false,\r\n    \"case_ids\": [\r\n        1,\r\n        2,\r\n        4\r\n    ],\r\n    \"refs\": \"FNTEST-123, FNTEST-1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/update_run_to_plan_entry/:plan_id/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_run_to_plan_entry",
										":plan_id",
										":run_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the plan the test runs should be added to"
										},
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CLOSE Plan",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/close_plan/:plan_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"close_plan",
										":plan_id"
									],
									"variable": [
										{
											"key": "plan_id",
											"value": null,
											"description": "The ID of the test plan"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Runs",
					"item": [
						{
							"name": "FIND Run",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_run",
										":run_id"
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Runs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_runs/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_runs",
										":project_id"
									],
									"query": [
										{
											"key": "created_after",
											"value": null,
											"description": "Only return test runs created after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": null,
											"description": "Only return test runs created before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										},
										{
											"key": "is_completed",
											"value": null,
											"description": "1 to return completed test runs only. 0 to return active test runs only",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "Limit the result to limit test runs. Use offset to skip records",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "Limit the result to limit test runs. Use offset to skip records",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": null,
											"description": "A comma-separated list of milestone IDs to filter by",
											"disabled": true
										},
										{
											"key": "refs_filter",
											"value": null,
											"description": "A single Reference ID (e.g. TR-a, 4291, etc.)",
											"disabled": true
										},
										{
											"key": "suite_id",
											"value": null,
											"description": "A comma-separated list of test suite IDs to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD a Run",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_run/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_run",
										":project_id"
									],
									"query": [
										{
											"key": "suite_id",
											"value": null,
											"description": "The ID of the test suite for the test run (optional if the project is operating in single suite mode, required otherwise)",
											"disabled": true
										},
										{
											"key": "name",
											"value": null,
											"description": "The name of the test run",
											"disabled": true
										},
										{
											"key": "description",
											"value": null,
											"description": "The description of the test run",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": null,
											"description": "The ID of the milestone to link to the test run",
											"disabled": true
										},
										{
											"key": "assignedto_id",
											"value": null,
											"description": "1 to return completed test runs only. 0 to return active test runs onlyThe ID of the user the test run should be assigned to",
											"disabled": true
										},
										{
											"key": "include_all",
											"value": null,
											"description": "True for including all test cases of the test suite and false for a custom case selection (default: true)",
											"disabled": true
										},
										{
											"key": "case_ids",
											"value": null,
											"description": "An array of case IDs for the custom case selection",
											"disabled": true
										},
										{
											"key": "refs",
											"value": null,
											"description": "A comma-separated list of references/requirements — requires TestRail 6.1 or later",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UPSERT Run",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/update_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_run",
										":run_id"
									],
									"query": [
										{
											"key": "suite_id",
											"value": null,
											"description": "The ID of the test suite for the test run (optional if the project is operating in single suite mode, required otherwise)",
											"disabled": true
										},
										{
											"key": "name",
											"value": null,
											"description": "The name of the test run",
											"disabled": true
										},
										{
											"key": "description",
											"value": null,
											"description": "The description of the test run",
											"disabled": true
										},
										{
											"key": "milestone_id",
											"value": null,
											"description": "The ID of the milestone to link to the test run",
											"disabled": true
										},
										{
											"key": "assignedto_id",
											"value": null,
											"description": "1 to return completed test runs only. 0 to return active test runs onlyThe ID of the user the test run should be assigned to",
											"disabled": true
										},
										{
											"key": "include_all",
											"value": null,
											"description": "True for including all test cases of the test suite and false for a custom case selection (default: true)",
											"disabled": true
										},
										{
											"key": "case_ids",
											"value": null,
											"description": "An array of case IDs for the custom case selection",
											"disabled": true
										},
										{
											"key": "refs",
											"value": null,
											"description": "A comma-separated list of references/requirements — requires TestRail 6.1 or later",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CLOSE Run",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/close_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"close_run",
										":run_id"
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Run",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_run",
										":run_id"
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "FIND Test(s) by Run",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_tests/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_tests",
										":run_id"
									],
									"query": [
										{
											"key": "status_id",
											"value": null,
											"description": "A comma-separated list of status IDs to filter by",
											"disabled": true
										},
										{
											"key": "limit",
											"value": null,
											"description": "The number that sets the limit of tests to be shown on the response (Optional parameter. The response size limit is 250 by default) – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "The number that sets the position where the response should start from (Optional parameter) – requires TestRail 6.7 or later",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null,
											"description": "The ID of the test run"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Test by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_test/:test_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_test",
										":test_id"
									],
									"query": [
										{
											"key": "with_data",
											"value": null,
											"description": "The parameter to get data",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "test_id",
											"value": null,
											"description": "The ID of the test"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Results",
					"item": [
						{
							"name": "RETURN Result Fields",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_result_fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_result_fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Results",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_results/:test_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_results",
										":test_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number that sets the limit of test results to be shown on the response (The response size limit is 250 by default) – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "The number that sets the position where the response should start from – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "defects_filter",
											"value": null,
											"description": "A single Defect ID (e.g. TR-1, 4291, etc.)",
											"disabled": true
										},
										{
											"key": "status_id",
											"value": null,
											"description": "A comma-separated list of status IDs to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "test_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Results by Case",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_results_for_case/:run_id/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_results_for_case",
										":run_id",
										":case_id"
									],
									"query": [
										{
											"key": "limit",
											"value": null,
											"description": "The number that sets the limit of test results to be shown on the response (The response size limit is 250 by default) – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "offset",
											"value": null,
											"description": "The number that sets the position where the response should start from – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "defects_filter",
											"value": null,
											"description": "A single Defect ID (e.g. TR-1, 4291, etc.)",
											"disabled": true
										},
										{
											"key": "status_id",
											"value": null,
											"description": "A comma-separated list of status IDs to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										},
										{
											"key": "case_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FIND Results by Run",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get_results_for_run/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_results_for_run",
										":run_id"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "The number that sets the limit of test results to be shown on the response (The response size limit is 250 by default) – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "",
											"description": "The number that sets the position where the response should start from – requires TestRail 6.7 or later",
											"disabled": true
										},
										{
											"key": "defects_filter",
											"value": "",
											"description": "A single Defect ID (e.g. TR-1, 4291, etc.)",
											"disabled": true
										},
										{
											"key": "status_id",
											"value": "",
											"description": "A comma-separated list of status IDs to filter by",
											"disabled": true
										},
										{
											"key": "created_after",
											"value": null,
											"description": "Only return test results created after this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": null,
											"description": "Only return test results created before this date (as UNIX timestamp)",
											"disabled": true
										},
										{
											"key": "created_by",
											"value": null,
											"description": "A comma-separated list of creators (user IDs) to filter by",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Results by Test ID",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_result/:test_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_result",
										":test_id"
									],
									"query": [
										{
											"key": "status_id",
											"value": "",
											"description": "The ID of the test status. The default system statuses have the following IDs:\n\n1: Passed\n2: Blocked\n3: Untested (not allowed when adding a new result)\n4: Retest\n5: Failed\nYou can get a full list of system and custom statuses via get_statuses.",
											"disabled": true
										},
										{
											"key": "comment",
											"value": null,
											"description": "The comment/description for the test result",
											"disabled": true
										},
										{
											"key": "version",
											"value": null,
											"description": "The version or build you tested against",
											"disabled": true
										},
										{
											"key": "elapsed",
											"value": null,
											"description": "The time it took to execute the test, e.g. “30s” or “1m 45s”",
											"disabled": true
										},
										{
											"key": "defects",
											"value": null,
											"description": "A comma-separated list of defects to link to the test result",
											"disabled": true
										},
										{
											"key": "assignedto_id",
											"value": null,
											"description": "The ID of a user the test should be assigned to",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "test_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Results by Case ID",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/add_result_for_case/:run_id/:case_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_result_for_case",
										":run_id",
										":case_id"
									],
									"query": [
										{
											"key": "status_id",
											"value": "",
											"description": "The ID of the test status. The default system statuses have the following IDs:\n\n1: Passed\n2: Blocked\n3: Untested (not allowed when adding a new result)\n4: Retest\n5: Failed\nYou can get a full list of system and custom statuses via get_statuses.",
											"disabled": true
										},
										{
											"key": "comment",
											"value": null,
											"description": "The comment/description for the test result",
											"disabled": true
										},
										{
											"key": "version",
											"value": null,
											"description": "The version or build you tested against",
											"disabled": true
										},
										{
											"key": "elapsed",
											"value": null,
											"description": "The time it took to execute the test, e.g. “30s” or “1m 45s”",
											"disabled": true
										},
										{
											"key": "defects",
											"value": null,
											"description": "A comma-separated list of defects to link to the test result",
											"disabled": true
										},
										{
											"key": "assignedto_id",
											"value": null,
											"description": "The ID of a user the test should be assigned to",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										},
										{
											"key": "case_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Results",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"results\": [\r\n        {\r\n            \"test_id\",\r\n            \"status_id\",\r\n            \"comment\",\r\n            \"version\",\r\n            \"elapsed\",\r\n            \"defects\",\r\n            \"assignedto_id\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_results/:run_id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_results",
										":run_id",
										""
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ADD Results For Cases",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"results\": [\r\n        {\r\n            \"case_id\",\r\n            \"status_id\",\r\n            \"comment\",\r\n            \"version\",\r\n            \"elapsed\",\r\n            \"defects\",\r\n            \"assignedto_id\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/add_results/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_results",
										":run_id"
									],
									"variable": [
										{
											"key": "run_id",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Milestone Managment",
			"item": [
				{
					"name": "RETURN Milestone",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get_milestone/:milestone_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_milestone",
								":milestone_id"
							],
							"variable": [
								{
									"key": "milestone_id",
									"value": "-16741323",
									"description": "(Required) The ID of the milestone"
								}
							]
						}
					},
					"response": [
						{
							"name": "A milestone",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestone/:milestone_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestone",
										":milestone_id"
									],
									"variable": [
										{
											"key": "milestone_id",
											"value": "-16741323",
											"description": "(Required) The ID of the milestone"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created_by\": -60777903,\n  \"created_on\": -83363277,\n  \"estimate\": \"Lorem minim officia\",\n  \"estimate_forecast\": \"cupidatat et consectetur\",\n  \"id\": -30019726,\n  \"milestone_id\": -24602546,\n  \"refs\": \"anim nostrud\",\n  \"section_id\": -84767354,\n  \"suite_id\": -28242088,\n  \"template_id\": 12389855,\n  \"title\": \"ut aliqua culpa\",\n  \"type_id\": -39857802,\n  \"updated_by\": 68553876,\n  \"updated_on\": -79276553\n}"
						},
						{
							"name": "Invalid or unknown milestone",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestone/:milestone_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestone",
										":milestone_id"
									],
									"variable": [
										{
											"key": "milestone_id",
											"value": "-16741323",
											"description": "(Required) The ID of the milestone"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No access to the project",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestone/:milestone_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestone",
										":milestone_id"
									],
									"variable": [
										{
											"key": "milestone_id",
											"value": "-16741323",
											"description": "(Required) The ID of the milestone"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestone/:milestone_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestone",
										":milestone_id"
									],
									"variable": [
										{
											"key": "milestone_id",
											"value": "-16741323",
											"description": "(Required) The ID of the milestone"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "RETURN Milestones per Project",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get_milestones/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_milestones",
								":project_id"
							],
							"query": [
								{
									"key": "is_completed",
									"value": "true",
									"description": "1 to return completed milestones only. 0 to return open (active/upcoming) milestones only (available since TestRail 4.0).",
									"disabled": true
								},
								{
									"key": "is_started",
									"value": "true",
									"description": "1 to return started milestones only. 0 to return upcoming milestones only (available since TestRail 5.3).",
									"disabled": true
								},
								{
									"key": "limit",
									"value": null,
									"description": "The number of milestones the response should return (The response size is 250 by default) — requires TestRail 6.7 or later",
									"disabled": true
								},
								{
									"key": "offset",
									"value": null,
									"description": "Where to start counting the milestones from (the offset) — requires TestRail 6.7 or later",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "-16741323",
									"description": "(Required) The ID of the test case"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the milestones are returned as part of the response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestones/:project_id?is_completed=true&is_started=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestones",
										":project_id"
									],
									"query": [
										{
											"key": "is_completed",
											"value": "true"
										},
										{
											"key": "is_started",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"completed_on\": -60441268,\n    \"description\": \"in deserunt magna cillum\",\n    \"due_on\": -57112542,\n    \"id\": 8726966,\n    \"is_completed\": false,\n    \"is_started\": true,\n    \"milestones\": [\n      -69232165,\n      -96391837\n    ],\n    \"name\": \"cupidatat officia exercitation\",\n    \"parent_id\": 90553889,\n    \"project_id\": -72768457,\n    \"start_on\": 64003362,\n    \"started_on\": -69900637,\n    \"url\": \"anim voluptate culpa\"\n  },\n  {\n    \"completed_on\": 11287728,\n    \"description\": \"fugiat\",\n    \"due_on\": 11005854,\n    \"id\": -79398566,\n    \"is_completed\": true,\n    \"is_started\": false,\n    \"milestones\": [\n      27806816,\n      -83139393\n    ],\n    \"name\": \"irure proident exercitation\",\n    \"parent_id\": 77005688,\n    \"project_id\": 91413511,\n    \"start_on\": -70779939,\n    \"started_on\": -28635653,\n    \"url\": \"Lorem aliquip mollit\"\n  }\n]"
						},
						{
							"name": "Invalid or unknown project",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestones/:project_id?is_completed=true&is_started=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestones",
										":project_id"
									],
									"query": [
										{
											"key": "is_completed",
											"value": "true"
										},
										{
											"key": "is_started",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No access to the project",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestones/:project_id?is_completed=true&is_started=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestones",
										":project_id"
									],
									"query": [
										{
											"key": "is_completed",
											"value": "true"
										},
										{
											"key": "is_started",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_milestones/:project_id?is_completed=true&is_started=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_milestones",
										":project_id"
									],
									"query": [
										{
											"key": "is_completed",
											"value": "true"
										},
										{
											"key": "is_started",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the test case"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "ADD Milestone by Project",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/add_milestone/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"add_milestone",
								":project_id"
							],
							"query": [
								{
									"key": "name",
									"value": null,
									"description": "The name of the milestone\n",
									"disabled": true
								},
								{
									"key": "description",
									"value": null,
									"description": "The description of the milestone\n",
									"disabled": true
								},
								{
									"key": "due_on",
									"value": null,
									"description": "The due date of the milestone (as UNIX timestamp)",
									"disabled": true
								},
								{
									"key": "parent_id",
									"value": null,
									"description": "The ID of the parent milestone, if any (for sub-milestones) — requires TestRail 5.3 or later",
									"disabled": true
								},
								{
									"key": "refs",
									"value": null,
									"description": "A comma-separated list of references/requirements — requires TestRail 6.4 or later",
									"disabled": true
								},
								{
									"key": "start_on",
									"value": null,
									"description": "The scheduled start date of the milestone (as UNIX timestamp) — requires TestRail 5.3 or later",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UPSERT Existing Milestone by ID",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/update_milestone/:milestone_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update_milestone",
								":milestone_id"
							],
							"query": [
								{
									"key": "parent_id",
									"value": "",
									"description": "The ID of the parent milestone, if any (for sub-milestones) — requires TestRail 5.3 or later",
									"disabled": true
								},
								{
									"key": "start_on",
									"value": "",
									"description": "The scheduled start date of the milestone (as UNIX timestamp) — requires TestRail 5.3 or later",
									"disabled": true
								},
								{
									"key": "is_completed",
									"value": "true",
									"description": "1 to return completed milestones only. 0 to return open (active/upcoming) milestones only (available since TestRail 4.0).",
									"disabled": true
								},
								{
									"key": "is_started",
									"value": "true",
									"description": "1 to return started milestones only. 0 to return upcoming milestones only (available since TestRail 5.3).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "milestone_id",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Milestone by ID",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delete_milestone/:milestone_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete_milestone",
								":milestone_id"
							],
							"variable": [
								{
									"key": "milestone_id",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "User Groups",
					"item": []
				},
				{
					"name": "RETURN User by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FIND User By Email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_user_by_email&email={{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_user_by_email&email={{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "FIND Projects for Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "RETURN Current User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_current_user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_current_user",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Users by Project ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_users/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_users",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_users"
							]
						}
					},
					"response": []
				},
				{
					"name": "MAKE New User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/add_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"add_user"
							],
							"query": [
								{
									"key": "assigned_projects",
									"value": "",
									"description": "An array of project IDs to assign to a Project Level Administrator. See Project Level Administration for more information.",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"description": "The email address of the user. (Required)",
									"disabled": true
								},
								{
									"key": "email_notifications",
									"value": "",
									"description": "False to disable email notifications for the user. Default: True.",
									"disabled": true
								},
								{
									"key": "is_admin",
									"value": "",
									"description": "True to make the user a TestRail Administrator. Default: False.",
									"disabled": true
								},
								{
									"key": "group_ids",
									"value": "",
									"description": "Array of group IDs to assign the user to",
									"disabled": true
								},
								{
									"key": "mfa_required",
									"value": "",
									"description": "True to require Multi-Factor Authentication for the user. Default value matches the MFA setting of the instance",
									"disabled": true
								},
								{
									"key": "name",
									"value": "",
									"description": "The name of the user. (Required)",
									"disabled": true
								},
								{
									"key": "role_id",
									"value": "",
									"description": "The ID of the global role to assign to the user",
									"disabled": true
								},
								{
									"key": "sso_enabled",
									"value": "",
									"description": "True to enable SSO for the user. Default value matches the SSO setting of the instance",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UPSERT Existing User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/add_user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"add_user",
								":user_id"
							],
							"query": [
								{
									"key": "assigned_projects",
									"value": "",
									"description": "An array of project IDs to assign to a Project Level Administrator. See Project Level Administration for more information.",
									"disabled": true
								},
								{
									"key": "email",
									"value": "",
									"description": "The email address of the user. (Required)",
									"disabled": true
								},
								{
									"key": "email_notifications",
									"value": "",
									"description": "False to disable email notifications for the user. Default: True.",
									"disabled": true
								},
								{
									"key": "is_admin",
									"value": "",
									"description": "True to make the user a TestRail Administrator. Default: False.",
									"disabled": true
								},
								{
									"key": "group_ids",
									"value": "",
									"description": "Array of group IDs to assign the user to",
									"disabled": true
								},
								{
									"key": "mfa_required",
									"value": "",
									"description": "True to require Multi-Factor Authentication for the user. Default value matches the MFA setting of the instance",
									"disabled": true
								},
								{
									"key": "name",
									"value": "",
									"description": "The name of the user. (Required)",
									"disabled": true
								},
								{
									"key": "role_id",
									"value": "",
									"description": "The ID of the global role to assign to the user",
									"disabled": true
								},
								{
									"key": "sso_enabled",
									"value": "",
									"description": "True to enable SSO for the user. Default value matches the SSO setting of the instance",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "user_id",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration Management",
			"item": [
				{
					"name": "FIND Statuses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/get_statuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "RETURN Config Options [grouped (requires TestRail 3.1 or later)]",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get_configs/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get_configs",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "-16741323",
									"description": "(Required) The ID of the project"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configurations are returned as part of the response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_configs/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_configs",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"configs\": [\n      {\n        \"group_id\": 26611613,\n        \"id\": -15612291,\n        \"name\": \"ea elit officia\"\n      },\n      {\n        \"group_id\": -71459608,\n        \"id\": 16198479,\n        \"name\": \"officia cupidatat voluptate Ut\"\n      }\n    ],\n    \"project_id\": -51126396,\n    \"id\": 99311258,\n    \"name\": \"consectetur eu dolor\"\n  },\n  {\n    \"configs\": [\n      {\n        \"group_id\": -11013537,\n        \"id\": -13324514,\n        \"name\": \"cillum mag\"\n      },\n      {\n        \"group_id\": -38519014,\n        \"id\": -92604959,\n        \"name\": \"ut officia\"\n      }\n    ],\n    \"project_id\": 41556604,\n    \"id\": 69775419,\n    \"name\": \"fugiat nulla ullamco\"\n  }\n]"
						},
						{
							"name": "Invalid or unknown project, suite or section",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_configs/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_configs",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No access to the project",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_configs/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_configs",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/get_configs/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get_configs",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "MAKE New Config Group (requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "culpa",
									"description": "(Required) The name of the configuration group"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/add_config_group/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"add_config_group",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "-16741323",
									"description": "(Required) The ID of the project the configuration group should be added to"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration group was created and is returned as part of the response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config_group/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config_group",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project the configuration group should be added to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config_group/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config_group",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project the configuration group should be added to"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config_group/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config_group",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project the configuration group should be added to"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config_group/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config_group",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id",
											"value": "-16741323",
											"description": "(Required) The ID of the project the configuration group should be added to"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "MAKE New Config (requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "conse",
									"description": "(Required) The name of the configuration"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/add_config/:config_group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"add_config",
								":config_group_id"
							],
							"variable": [
								{
									"key": "config_group_id",
									"value": "-16741323",
									"description": "(Required) The ID of the configuration group the configuration should be added to"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration was created and is returned as part of the response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group the configuration should be added to"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group the configuration should be added to"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group the configuration should be added to"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/add_config/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"add_config",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group the configuration should be added to"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "UPSERT Existing Config Group (requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "culpa",
									"description": "(Required) The name of the configuration group"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/update_config_group/:config_group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update_config_group",
								":config_group_id"
							],
							"variable": [
								{
									"key": "config_group_id",
									"value": "-16741323",
									"description": "(Required) The ID of the configuration group"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration group was updated and is returned as part of the response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "UPSERT Existing Config(requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "conse",
									"description": "(Required) The name of the configuration"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/update_config/:config_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update_config",
								":config_id"
							],
							"variable": [
								{
									"key": "config_id",
									"value": "-16741323",
									"description": "(Required) The ID of the configuration"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration was updated and is returned as part of the response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/update_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"update_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "DELETE Existing Config Group (requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/delete_config_group/:config_group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete_config_group",
								":config_group_id"
							],
							"variable": [
								{
									"key": "config_group_id",
									"value": "-16741323",
									"description": "(Required) The ID of the configuration group"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration group and all its configurations were deleted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config_group/:config_group_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config_group",
										":config_group_id"
									],
									"variable": [
										{
											"key": "config_group_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration group"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				},
				{
					"name": "DELETE Existing Config (requires TestRail 5.2 or later).",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/delete_config/:config_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete_config",
								":config_id"
							],
							"variable": [
								{
									"key": "config_id",
									"value": "-16741323",
									"description": "(Required) The ID of the configuration"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success, the configuration was deleted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid or unknown test case",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "No permissions to add configuration groups or no access to the project",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/delete_config/:config_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete_config",
										":config_id"
									],
									"variable": [
										{
											"key": "config_id",
											"value": "-16741323",
											"description": "(Required) The ID of the configuration"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"nulla adipisicing officia elit\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "<Basic Auth Username>",
				"type": "string"
			},
			{
				"key": "password",
				"value": "<Basic Auth Password>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://your_domain.testrail.com/index.php?/api/v2",
			"type": "string"
		},
		{
			"key": "username",
			"value": "your_email"
		},
		{
			"key": "filepath",
			"value": "null"
		}
	]
}